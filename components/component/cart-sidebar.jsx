/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/Z9CCE48wfPP
 */
import { Button } from "@/components/ui/button";
import {
  CardTitle,
  CardDescription,
  CardHeader,
  CardContent,
  Card,
} from "@/components/ui/card";
import { CartContext } from "@/lib/context/cartContext";
import { useContext } from "react";
import CartCard from "./cart-card";
import { useRouter } from "next/router";
import { ShoppingCartIcon } from "../icons/shoppingCartIcon";
import { PackageIcon } from "../icons/packageIcon";
import { CrossIcon } from "../icons/crossIcon";
import { CurrencyCart } from "./currencyCart";
import { CurrencyContext } from "@/lib/context/currencyContext";

export function CartSidebar({ dialogRef }) {
  const { cart, orderId } = useContext(CartContext);
  const { currentRate } = useContext(CurrencyContext);
  const router = useRouter();

  return (
    // <div className="grid min-h-screen w-full lg:grid-cols-[280px_1fr]">
    // <div className="hidden border-r bg-gray-100/40 lg:block dark:bg-gray-800/40">
    <dialog
      ref={dialogRef}
      open={false}
      className="fixed right-full top-0 min-h-screen z-10 w-80 border-r sm:h-screen "
    >
      <div className="flex h-[60px] items-center border-b px-6">
        <Button
          className="ml-auto h-8 w-8"
          size="icon"
          variant="outline"
          onClick={() => dialogRef.current.close()}
        >
          <CrossIcon />
          <span className="sr-only">close cart</span>
        </Button>
      </div>
      {!cart ? (
        <div className="flex-1 py-2">
          <div className="grid items-start px-4 text-sm font-medium">
            <div className="flex items-center gap-3 px-3 py-2 text-gray-500 ">
              <PackageIcon className="" />
              <span className="font-semibold">Your Cart</span>
            </div>
            <div className="flex items-center justify-center h-full">
              <div className="text-center">
                <ShoppingCartIcon className="h-16 w-16 text-gray-400 " />
                <p className="mt-4 text-gray-500 ">
                  Your cart is currently empty.
                </p>
              </div>
            </div>
          </div>
        </div>
      ) : (
        <>
          <div className="flex-1 overflow-auto py-2">
            <div className="grid items-start px-4 text-sm font-medium max-h-[550px] overflow-y-scroll">
              <div className="flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500  ">
                <ShoppingCartIcon />
                <span className="font-semibold">Your Cart</span>
              </div>
              <div className="flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500  ">
                <p className="text-sm text-gray-500">
                  Prices are in {currentRate.code}
                </p>
              </div>
              {!cart.line_items.length ? (
                <div className="flex-1 py-2">
                  <div className="grid items-start px-4 text-sm font-medium">
                    <div className="flex items-center justify-center h-full">
                      <div className="text-center">
                        <ShoppingCartIcon className="h-16 w-16 text-gray-400 " />
                        <p className="mt-4 text-gray-500 ">
                          Your cart is currently empty.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              ) : (
                cart.line_items.map((item) => {
                  return (
                    <CartCard
                      product={item}
                      key={item.id}
                      currentRate={currentRate}
                    />
                  );
                })
              )}
            </div>
          </div>
        </>
      )}
      <div className="mt-auto p-4 absolute bottom-0 w-full">
        {!cart ? null : (
          <Card>
            <CardHeader className="pb-4">
              <CardTitle>Total</CardTitle>
              {!cart.total_tax ? null : (
                <CardDescription>
                  {Number(cart.total_tax) > 0
                    ? `Tax: ${cart.currency_symbol} ${(
                        currentRate.rate * Number(cart.total_tax)
                      ).toFixed(2)}`
                    : null}
                </CardDescription>
              )}
              {!cart.currency_symbol || cart.total === "0.00" ? null : (
                <CardDescription>
                  Total: {cart.currency_symbol}{" "}
                  {(currentRate.rate * Number(cart.total)).toFixed(2)}
                </CardDescription>
              )}
            </CardHeader>
            <CardContent>
              {/* <CurrencyCart /> */}
              {!cart ? (
                <Button
                  className="w-full bg-cdiBlue text-white hover:bg-cdiLightBlue hover:text-black"
                  variant="solid"
                  size="sm"
                  onClick={() => {
                    dialogRef.current.close();
                    router.push({
                      pathname: "/products",
                    });
                  }}
                >
                  Continue Shopping
                </Button>
              ) : !cart.line_items.length ? (
                <Button
                  className="w-full bg-cdiBlue text-white hover:bg-cdiLightBlue hover:text-black"
                  variant="solid"
                  size="sm"
                  onClick={() => {
                    dialogRef.current.close();
                    router.push({
                      pathname: "/products",
                    });
                  }}
                >
                  Continue Shopping
                </Button>
              ) : (
                <Button
                  className="w-full bg-cdiBlue text-white hover:bg-cdiLightBlue hover:text-black"
                  variant="solid"
                  size="sm"
                  onClick={() => {
                    router.push({
                      pathname: "/checkout",
                      query: { orderId },
                    });
                  }}
                >
                  Checkout
                </Button>
              )}
            </CardContent>
          </Card>
        )}
      </div>
    </dialog>
    // </div>
    // </div>
  );
}
