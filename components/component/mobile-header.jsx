/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/Rs2fYkf5SIe
 */
import { Button } from "@/components/ui/button";
import { SheetTrigger, SheetContent, Sheet } from "@/components/ui/sheet";
import Link from "next/link";
import {
  CollapsibleTrigger,
  CollapsibleContent,
  Collapsible,
} from "@/components/ui/collapsible";
import { SearchIcon } from "./search-icon";
import { ChevronRightIcon } from "../icons/chevronRightIcon";
import { MenuIcon } from "../icons/menuIcon";
import { ShoppingCartIcon } from "../icons/shoppingCartIcon";
import { menuItems } from "@/data/navigation/desktop/menuItems";
import { Badge } from "../ui/badge";

export function MobileHeader({ dialogRef, cartQuantity }) {
  return (
    <Sheet key="1">
      <div className="w-full flex items-center justify-center gap-4 lg:hidden">
        <SearchIcon />
        <Button
          className="lg:hidden"
          size="icon"
          variant="outline"
          onClick={() => {
            dialogRef.current.showModal();
          }}
        >
          <ShoppingCartIcon className="h-6 w-6" />
          <span className="sr-only">Open shopping cart</span>
        </Button>
        <SheetTrigger asChild>
          <Button className="lg:hidden" size="icon" variant="outline">
            <MenuIcon className="h-6 w-6" />
            <span className="sr-only">Toggle navigation menu</span>
          </Button>
        </SheetTrigger>
      </div>
      <SheetContent side="right">
        <div className="flex items-center justify-end p-4">
          <Button className="lg:hidden" size="icon" variant="outline">
            <ShoppingCartIcon className="h-6 w-6" />
            <span className="sr-only">Open shopping cart</span>

            <Badge className="absolute -translate-y-5 translate-x-5 lg:top-0 lg:right-0 lg:transform  lg:-translate-y-1 h-5 w-5 text-xs flex items-center justify-center rounded-full bg-cdiBlue text-white">
              {cartQuantity}
            </Badge>
          </Button>
        </div>
        <div className="grid gap-2 py-6">
          {menuItems.map((item, index) => {
            if (!item.submenu.length) {
              return (
                <Link
                  key={item.title + index}
                  className="flex w-full items-center py-2 text-lg font-semibold"
                  href={item.url}
                >
                  {item.title}
                </Link>
              );
            } else {
              return (
                <Collapsible className="grid gap-4" key={item.title + index}>
                  <CollapsibleTrigger className="flex w-full items-center text-lg font-semibold [&[data-state=open]>svg]:rotate-90">
                    <Link
                      className="flex w-full items-center py-2 text-lg font-semibold"
                      href={item.url}
                    >
                      {item.title}
                    </Link>
                    <ChevronRightIcon className="ml-auto h-5 w-5 transition-all" />
                  </CollapsibleTrigger>
                  <CollapsibleContent>
                    <div className="-mx-6 grid gap-6 bg-gray-100 p-6 ">
                      {item.submenu.map((subItem, index) => (
                        <Link
                          key={subItem.title + index}
                          className="group grid h-auto w-full justify-start gap-1"
                          href={subItem.url}
                        >
                          <div className="text-sm font-medium leading-none group-hover:underline">
                            {subItem.title}
                          </div>
                          {/* <div className="line-clamp-2 text-sm leading-snug text-gray-500 ">
                      Upgrade your reporting with advanced analytics.
                    </div> */}
                        </Link>
                      ))}
                    </div>
                  </CollapsibleContent>
                </Collapsible>
              );
            }
          })}
        </div>
      </SheetContent>
    </Sheet>
  );
}

function MountainIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  );
}
