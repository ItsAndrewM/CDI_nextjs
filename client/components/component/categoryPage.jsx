/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/42XLybiwfRo
 */
import {
  CardTitle,
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { SortBy } from "./sort-by";
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectContent,
  Select,
} from "../ui/select";
import { useRouter } from "next/router";
import { PaginationBar } from "./paginationBar";
import Link from "next/link";
import { removeCharsFromName } from "@/lib/helpers";

export function CategoryPage({ categories, pages }) {
  console.log(pages);
  const router = useRouter();
  return (
    <section key="1" className="w-full md:py-24 flex justify-center">
      <div className="container grid items-center justify-center gap-4 px-4 text-center md:px-6 lg:gap-10 ">
        <div
          className="space-y-3 rounded-lg border border-gray-200 bg-cover bg-center text-center flex justify-end items-start flex-col "
          style={{
            backgroundImage: "url(/images/furlers/flexible-furler-1.jpg)",
            height: "500px",
          }}
        >
          <div className="w-full h-full flex flex-col justify-center items-center backdrop-brightness-95">
            <h2 className="text-3xl text-white font-bold tracking-tighter sm:text-4xl md:text-5xl ">
              Explore Our Collection
            </h2>
            <p className=" max-w-[700px] text-white md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed ">
              Sail with Excellence
            </p>
          </div>
        </div>
        <div className="w-full">
          <div className="flex justify-end items-center gap-4">
            <Select
              className="border-0 z-10"
              onValueChange={(value) =>
                router.push({
                  pathname: router.pathname,
                  query: { ...router.query, sort: value },
                })
              }
            >
              <SelectTrigger id="sort">
                <SelectValue placeholder="Sort" />
              </SelectTrigger>
              <SelectContent position="popper">
                <SelectItem value="date-asc">Newest</SelectItem>
                <SelectItem value="date-desc">Oldest</SelectItem>
                <SelectItem value="price-asc">Price: Low to High</SelectItem>
                <SelectItem value="price-desc">Price: High to Low</SelectItem>
                <SelectItem value="name-asc">Name: A to Z</SelectItem>
                <SelectItem value="name-desc">Name: Z to A</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>
        <div className="grid w-full grid-cols-2 md:grid-cols-4 gap-4 md:gap-8">
          {!categories.length
            ? null
            : categories.map((category) => (
                <Link
                  href={`/product-category/${category.slug}`}
                  key={category.id}
                >
                  <Card
                    className="bg-cover bg-center backdrop-blur-sm hover:shadow-lg transition-all duration-200 ease-in-out h-64 flex flex-col justify-between"
                    style={{
                      backgroundImage: !category.image
                        ? "url(/placeholder.svg)"
                        : `url(${category.image.src})`,
                    }}
                  >
                    <div className="w-full h-full flex flex-col justify-between items-center backdrop-brightness-95">
                      <CardHeader className="flex justify-center">
                        <CardTitle className="text-white">
                          {removeCharsFromName(category.name)}
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        {/* <p className="text-sm/relaxed">
                        Description for Category 1
                      </p> */}
                      </CardContent>
                      <CardFooter className="flex justify-center">
                        <Button
                          size="sm"
                          variant="solid"
                          className="bg-cdiBlue text-white hover:bg-cdiLightBlue hover:text-black"
                          onClick={(e) => {
                            e.preventDefault();
                            router.push({
                              pathname: `/product-category/${category.slug}`,
                            });
                          }}
                        >
                          View Products
                        </Button>
                      </CardFooter>
                    </div>
                  </Card>
                </Link>
              ))}
        </div>
        {pages.length > 1 ? <PaginationBar pages={pages} /> : null}
      </div>
    </section>
  );
}

function Package2Icon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 9h18v10a2 2 0 1-2 2H5a2 1-2-2V9Z" />
      <path d="m3 9 2.45-4.9A2 2 0 1 7.24 3h9.52a2 1.8 1.1L21" />
      <path d="M12 3v6" />
    </svg>
  );
}
