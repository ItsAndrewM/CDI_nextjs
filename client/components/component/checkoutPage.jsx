/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/xid9xtw1a4y
 */
import { Country, State, City } from "country-state-city";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import Image from "next/image";
import {
  Select,
  SelectTrigger,
  SelectValue,
  SelectItem,
  SelectGroup,
  SelectContent,
} from "../ui/select";
import { useContext, useState } from "react";
import { addShippingToOrder } from "@/lib/operations/operations-woocommerce";
import { CartContext } from "@/lib/context/cartContext";
import { useRouter } from "next/router";

export function CheckoutPage() {
  const { orderId } = useContext(CartContext);
  const router = useRouter();
  const [countryCode, setCountryCode] = useState(null);

  const handleShippingSubmit = async (e) => {
    e.preventDefault();
    const isValid = e.target.checkValidity();
    const form = e.target;
    const formData = new FormData(e.currentTarget);
    const validationMessages = Array.from(formData.keys()).reduce(
      (acc, key) => {
        acc[key] = form.elements[key].validationMessage;
        return acc;
      },
      {}
    );
    if (isValid) {
      // here you do what you need to do if is valid
      const data = Array.from(formData.keys()).reduce((acc, key) => {
        acc[key] = formData.get(key);
        return acc;
      }, {});
      console.log(data);
      try {
        console.log("trying");
        const response = await addShippingToOrder(orderId, data);
        // await swell.init(swellConfig.storeId, swellConfig.publicKey);
        // const response = await swell.cart.update({
        //   shipping: shipping,
        // });
        if (!response) {
          throw new Error(`Invalid response: ${response.status}`);
        }
        router.push({ pathname: `/checkout/billing`, query: { orderId } });
      } catch (err) {
        console.error(err);
        alert(
          "We can't submit the form, please review your answers and try again."
        );
      }
    } else {
      setErrors(validationMessages);
    }
  };
  return (
    <div className="mx-auto max-w-3xl space-y-6 border-2 border-gray-200 shadow-lg p-4 rounded-md my-8">
      <div className="grid grid-cols-2 gap-4">
        <div className="col-span-1 space-y-6">
          <div className="space-y-2 text-center">
            <h1 className="text-3xl font-bold">Shipping Address</h1>
            <p className="text-gray-500 dark:text-gray-400">
              Please enter your shipping details
            </p>
          </div>
          <form className="space-y-4" onSubmit={handleShippingSubmit}>
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="first-name">First Name</Label>
                <Input
                  id="first-name"
                  placeholder="Enter your first name"
                  required
                  type="text"
                  autoComplete="given-name"
                  name="first_name"
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="last-name">Last Name</Label>
                <Input
                  id="last-name"
                  placeholder="Enter your last name"
                  required
                  type="text"
                  autoComplete="family-name"
                  name="last_name"
                />
              </div>
            </div>
            <div className="space-y-2">
              <Label htmlFor="address-line-1">Address Line 1</Label>
              <Input
                id="address-line-1"
                type="search"
                placeholder="Enter your address"
                required
                autoComplete="street-address"
                name="address_1"
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="address-line-2">Address Line 2</Label>
              <Input
                id="address-line-2"
                placeholder="Apartment, suite, etc. (optional)"
                name="address_2"
              />
            </div>
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                {/* <Label htmlFor="state">State/Province</Label> */}
                {/* <Input
                  id="state"
                  placeholder="Enter your state/province"
                  required
                /> */}
                <Label htmlFor="country">Country</Label>
                {/* <Input id="country" placeholder="Enter your country" required /> */}
                <Select
                  className="w-full"
                  onValueChange={(value) => setCountryCode(value)}
                  required
                  name="country"
                >
                  <SelectTrigger className="text-gray-500 w-full">
                    <SelectValue placeholder="Select Country" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectGroup>
                      {Country.getAllCountries().map((country) => (
                        <SelectItem
                          value={country.isoCode}
                          key={country.isoCode}
                        >
                          {country.name}
                        </SelectItem>
                      ))}
                      {/* <SelectItem value="usa">United States</SelectItem>
                      <SelectItem value="canada">Canada</SelectItem>
                      <SelectItem value="uk">United Kingdom</SelectItem>
                      <SelectItem value="australia">Australia</SelectItem>
                      <SelectItem value="germany">Germany</SelectItem>
                      <SelectItem value="france">France</SelectItem>
                      <SelectItem value="japan">Japan</SelectItem>
                      <SelectItem value="china">China</SelectItem>
                      <SelectItem value="india">India</SelectItem>
                      <SelectItem value="brazil">Brazil</SelectItem> */}
                    </SelectGroup>
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label htmlFor="country">State/Province</Label>
                <Select
                  className="w-full"
                  onValueChange={(value) => setCountryCode(value)}
                  required
                  name="state"
                >
                  <SelectTrigger className="text-gray-500 w-full">
                    <SelectValue placeholder="Select state/province" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectGroup>
                      {!countryCode
                        ? null
                        : State.getStatesOfCountry(countryCode).map((state) => (
                            <SelectItem
                              value={state.isoCode}
                              key={state.isoCode}
                            >
                              {state.name}
                            </SelectItem>
                          ))}
                      {/* <SelectItem value="usa">United States</SelectItem>
                      <SelectItem value="canada">Canada</SelectItem>
                      <SelectItem value="uk">United Kingdom</SelectItem>
                      <SelectItem value="australia">Australia</SelectItem>
                      <SelectItem value="germany">Germany</SelectItem>
                      <SelectItem value="france">France</SelectItem>
                      <SelectItem value="japan">Japan</SelectItem>
                      <SelectItem value="china">China</SelectItem>
                      <SelectItem value="india">India</SelectItem>
                      <SelectItem value="brazil">Brazil</SelectItem> */}
                    </SelectGroup>
                  </SelectContent>
                </Select>
              </div>
            </div>
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="city">City</Label>
                <Input
                  id="city"
                  placeholder="Enter your city"
                  required
                  autoComplete="home city"
                  name="city"
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="postal-code">Postal Code</Label>
                <Input
                  id="postal-code"
                  placeholder="Enter your postal code"
                  name="postcode"
                  autoComplete="postal-code"
                  required
                />
              </div>
            </div>
            <div className="space-y-2">
              <Label htmlFor="email-address">Email Address</Label>
              <Input
                id="email-address"
                placeholder="Enter your email address"
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="phone-number">Phone Number</Label>
              <Input
                id="phone-number"
                autoComplete="tel"
                name="phone"
                placeholder="Enter your phone number"
                required
              />
            </div>
            <Button className="w-full" type="submit">
              Save Address
            </Button>
          </form>
        </div>
        <div className="col-span-1 space-y-6">
          <div className="space-y-2 text-center">
            <h1 className="text-3xl font-bold">Your Cart</h1>
            <p className="text-gray-500 dark:text-gray-400">
              Review your items before checkout
            </p>
          </div>
          <div className="space-y-4">
            <div className="flex justify-between items-center border-b-2 pb-2">
              <div className="flex items-center space-x-2">
                <Image
                  alt="Item 1"
                  className="w-12 h-12"
                  height="50"
                  src="/placeholder.svg"
                  style={{
                    aspectRatio: "50/50",
                    objectFit: "cover",
                  }}
                  width="50"
                />
                <p className="font-medium">Item 1</p>
              </div>
              <p className="font-medium">$20.00</p>
            </div>
            <div className="flex justify-between items-center border-b-2 pb-2">
              <div className="flex items-center space-x-2">
                <Image
                  alt="Item 2"
                  className="w-12 h-12"
                  height="50"
                  src="/placeholder.svg"
                  style={{
                    aspectRatio: "50/50",
                    objectFit: "cover",
                  }}
                  width="50"
                />
                <p className="font-medium">Item 2</p>
              </div>
              <p className="font-medium">$15.00</p>
            </div>
            <div className="flex justify-between items-center border-b-2 pb-2">
              <div className="flex items-center space-x-2">
                <Image
                  alt="Item 3"
                  className="w-12 h-12"
                  height="50"
                  src="/placeholder.svg"
                  style={{
                    aspectRatio: "50/50",
                    objectFit: "cover",
                  }}
                  width="50"
                />
                <p className="font-medium">Item 3</p>
              </div>
              <p className="font-medium">$30.00</p>
            </div>
            <div className="flex justify-between items-center pt-4">
              <h2 className="text-xl font-bold">Subtotal</h2>
              <p className="text-xl font-bold">$65.00</p>
            </div>
            <div className="flex justify-between items-center pt-4">
              <h2 className="text-xl font-bold">Tax (10%)</h2>
              <p className="text-xl font-bold">$6.50</p>
            </div>
            <div className="flex justify-between items-center pt-4">
              <h2 className="text-xl font-bold">Total</h2>
              <p className="text-xl font-bold">$71.50</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
