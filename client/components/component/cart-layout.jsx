/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/e9r8b2F9Sas
 */
import {
  TableHead,
  TableRow,
  TableHeader,
  TableCell,
  TableBody,
  Table,
} from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import {
  CardTitle,
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import Image from "next/image";
import Link from "next/link";
import CartTableRow from "./cartTableRow";

export function CartLayout({ cart }) {
  console.log(cart);
  return (
    <div className="flex flex-col gap-6 p-4 md:p-6">
      <h1 className="text-2xl font-semibold">Your Cart</h1>
      <div className="grid gap-6 md:grid-cols-3">
        <div className="md:col-span-2">
          <div className="border rounded-lg">
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead className="w-[80px]">Image</TableHead>
                  <TableHead>Name</TableHead>
                  <TableHead>Price</TableHead>
                  <TableHead>Quantity</TableHead>
                  <TableHead>Total</TableHead>
                  <TableHead />
                </TableRow>
              </TableHeader>
              <TableBody>
                {!cart ? (
                  <TableRow>
                    <TableCell className="text-center" colSpan="6">
                      Your cart is currently empty.
                    </TableCell>
                  </TableRow>
                ) : !cart.line_items.length ? (
                  <TableRow>
                    <TableCell className="text-center" colSpan="6">
                      Your cart is currently empty.
                    </TableCell>
                  </TableRow>
                ) : (
                  cart.line_items.map((item) => {
                    console.log(item);
                    return <CartTableRow item={item} key={item.id} />;
                  })
                )}
              </TableBody>
            </Table>
          </div>
        </div>
        <div className="grid gap-4">
          <Card>
            <CardHeader>
              <CardTitle>Order Summary</CardTitle>
            </CardHeader>
            {!cart ? (
              <CardContent className="grid gap-4">
                <div className="flex items-center">
                  <div>Subtotal</div>
                  <div className="ml-auto">$0.00</div>
                </div>
                <div className="flex items-center">
                  <div>Shipping</div>
                  <div className="ml-auto">$0.00</div>
                </div>
                <div className="flex items-center">
                  <div>Taxes</div>
                  <div className="ml-auto">$0.80</div>
                </div>
                <Separator />
                <div className="flex items-center font-medium">
                  <div>Total</div>
                  <div className="ml-auto">$0.80</div>
                </div>
                <p className="text-xs text-gray-500 mt-2">
                  *Taxes and Shipping costs will be adjusted during checkout
                </p>
              </CardContent>
            ) : (
              <CardContent className="grid gap-4">
                <div className="flex items-center">
                  <div>Subtotal</div>
                  <div className="ml-auto">
                    $
                    {!cart.line_items.length
                      ? "0.00"
                      : Number(cart.total) -
                        Number(cart.total_tax) -
                        Number(cart.shipping_total)}
                  </div>
                </div>
                <div className="flex items-center">
                  <div>Shipping</div>
                  <div className="ml-auto">
                    ${!cart.line_items.length ? "0.00" : cart.shipping_total}
                  </div>
                </div>
                <div className="flex items-center">
                  <div>Taxes</div>
                  <div className="ml-auto">
                    ${!cart.line_items.length ? "0.00" : cart.total_tax}
                  </div>
                </div>
                <Separator />
                <div className="flex items-center font-medium">
                  <div>Total</div>
                  <div className="ml-auto">
                    ${!cart.line_items.length ? "0.00" : cart.total}
                  </div>
                </div>
                <p className="text-xs text-gray-500 mt-2">
                  *Taxes and Shipping costs will be adjusted during checkout
                </p>
              </CardContent>
            )}
            <CardFooter>
              <Link
                href={
                  !cart
                    ? "/products"
                    : !cart.line_items.length
                    ? "/products"
                    : "/checkout"
                }
                className="w-full"
              >
                <Button className="w-full" size="sm">
                  {!cart
                    ? "Continue Shopping"
                    : !cart.line_items.length
                    ? "Continue Shopping"
                    : "Proceed to Checkout"}
                </Button>
              </Link>
            </CardFooter>
          </Card>
        </div>
      </div>
    </div>
  );
}

export const MinusIcon = (props) => {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
    </svg>
  );
};

export const PlusIcon = (props) => {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  );
};

export const TrashIcon = (props) => {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 6h18" />
      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2v2" />
    </svg>
  );
};
